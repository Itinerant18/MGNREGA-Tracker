{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\mgnrega-district-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport Dashboard from './pages/Dashboard';\nimport Comparison from './pages/Comparison';\nimport Header from './components/common/Header';\nimport Footer from './components/common/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // For now, we'll use Andhra Pradesh since our backend has real data for it\n  const [selectedState] = useState('Andhra Pradesh');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const handleDistrictSelect = district => {\n    setSelectedDistrict(district);\n    console.log('Selected district:', district);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {\n              selectedState: selectedState,\n              selectedDistrict: selectedDistrict,\n              onDistrictSelect: handleDistrictSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              selectedState: selectedState,\n              selectedDistrict: selectedDistrict\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/comparison\",\n            element: /*#__PURE__*/_jsxDEV(Comparison, {\n              selectedState: selectedState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Wv1+uqSaZ7wH3EYFAnrQJZf0SKw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Home","Dashboard","Comparison","Header","Footer","jsxDEV","_jsxDEV","App","_s","selectedState","selectedDistrict","setSelectedDistrict","handleDistrictSelect","district","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onDistrictSelect","_c","$RefreshReg$"],"sources":["C:/New folder/mgnrega-district-tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Comparison from './pages/Comparison';\r\nimport Header from './components/common/Header';\r\nimport Footer from './components/common/Footer';\r\n\r\nfunction App() {\r\n  // For now, we'll use Andhra Pradesh since our backend has real data for it\r\n  const [selectedState] = useState('Andhra Pradesh');\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n\r\n  const handleDistrictSelect = (district) => {\r\n    setSelectedDistrict(district);\r\n    console.log('Selected district:', district);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main className=\"main-content\">\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={\r\n                <Home \r\n                  selectedState={selectedState}\r\n                  selectedDistrict={selectedDistrict}\r\n                  onDistrictSelect={handleDistrictSelect}\r\n                />\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/dashboard\" \r\n              element={\r\n                <Dashboard \r\n                  selectedState={selectedState}\r\n                  selectedDistrict={selectedDistrict}\r\n                />\r\n              } \r\n            />\r\n            <Route \r\n              path=\"/comparison\" \r\n              element={\r\n                <Comparison \r\n                  selectedState={selectedState}\r\n                />\r\n              } \r\n            />\r\n          </Routes>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,aAAa,CAAC,GAAGd,QAAQ,CAAC,gBAAgB,CAAC;EAClD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMiB,oBAAoB,GAAIC,QAAQ,IAAK;IACzCF,mBAAmB,CAACE,QAAQ,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;EAC7C,CAAC;EAED,oBACEP,OAAA,CAACT,MAAM;IAAAmB,QAAA,eACLV,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBV,OAAA,CAACH,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVf,OAAA;QAAMW,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC5BV,OAAA,CAACR,MAAM;UAAAkB,QAAA,gBACLV,OAAA,CAACP,KAAK;YACJuB,IAAI,EAAC,GAAG;YACRC,OAAO,eACLjB,OAAA,CAACN,IAAI;cACHS,aAAa,EAAEA,aAAc;cAC7BC,gBAAgB,EAAEA,gBAAiB;cACnCc,gBAAgB,EAAEZ;YAAqB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFf,OAAA,CAACP,KAAK;YACJuB,IAAI,EAAC,YAAY;YACjBC,OAAO,eACLjB,OAAA,CAACL,SAAS;cACRQ,aAAa,EAAEA,aAAc;cAC7BC,gBAAgB,EAAEA;YAAiB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFf,OAAA,CAACP,KAAK;YACJuB,IAAI,EAAC,aAAa;YAClBC,OAAO,eACLjB,OAAA,CAACJ,UAAU;cACTO,aAAa,EAAEA;YAAc;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPf,OAAA,CAACF,MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACb,EAAA,CAjDQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}